################################################################################
# Artigo: Eficiência na Educação - Municípios
# Autore: Kelly Arruda Gomes & Yuri Cesar de Lima e Silva
# Produto: Rodando o DEA
################################################################################

# Fechar dados & gráficos
rm(list=ls())
graphics.off()

# Pacotes utilizados:
library(ggplot2)
library(dplyr)
library(readxl)
library(plyr)
library(deaR)
library(Benchmarking)
library(ggridges)
library(ggrepel)
library(patchwork)
library(magrittr)
library(grid)
library(lpSolveAPI)
library(ucminf)
library(quadprog)

# I) importando dados:

dados <- read_excel("dados/dados_finais.xlsx") 

# II) Organizando os dados:

dados <- dados %>%
  mutate(desp_2019 = (desp_ef_2019/mat_ef_2019)*prop_efai_2019,
         desp_2021 = (desp_ef_2021/mat_ef_2021)*prop_efai_2021,
         desp_2023 = (desp_ef_2023/mat_ef_2023)*prop_efai_2023)


dados <- dados %>%
  mutate(
    regiao = case_when(
      sigla %in% c("AC", "AP", "AM", "PA", "RO", "RR", "TO") ~ "Norte",
      sigla %in% c("AL", "BA", "CE", "MA", "PB", "PE", "PI", "RN", "SE") ~ "Nordeste",
      sigla %in% c("ES", "MG", "RJ", "SP") ~ "Sudeste",
      sigla %in% c("PR", "RS", "SC") ~ "Sul",
      sigla %in% c("DF", "GO", "MT", "MS") ~ "Centro-Oeste",
      TRUE ~ NA_character_))

# Excluindo linhas com NA

dados_full <- dados[complete.cases(dados), ]

# II) Rodando o DEA:
x2019 <- as.matrix(with(dados_full, desp_2019))

y2019 <- as.matrix(with(dados_full, ideb_2019))


dea.plot.frontier(x2019,y2019,txt=TRUE)

#modelos

modelo2019 <- dea(x2019,y2019,RTS="vrs",ORIENTATION="out")

efficiencies(modelo2019)

eff <- (efficiencies(modelo2019))

1/eff

summary(modelo2019)

escores2019 <- data.frame(dados_full$nome,dados_full$sigla, eficiencia=1/(modelo2019=modelo2019$eff)*100)

escores2019 %>%
  arrange(desc(eficiencia))

modelo2019 <- dea(x2019,y2019,RTS="vrs",ORIENTATION="out")

benchmarks2019 <- data.frame(dados_full$nome,dados_full$sigla,modelo2019=modelo2019$lambda)

benchmarks2019

## Gráficos

colnames(escores2019)[colnames(escores2019) == "dados_full.nome"] <- "nome"
colnames(escores2019)[colnames(escores2019) == "dados_full.sigla"] <- "sigla"

dados_full <- dados_full %>%
  left_join(escores2019, by = c("sigla","nome"))

frontier <- dados_full %>%
  filter(eficiencia == 100) %>%   # substitua 'eficiencia' pelo nome da sua coluna
  arrange(desp_2019)


# Obtém os extremos:
min_x_base <- dados_full %>%
  filter(eficiencia == 100)                     # menor valor de x2019 dentre os eficientes
min_x <- min(min_x_base$desp_2019, na.rm = TRUE)

max_x_total <- max(dados_full$desp_2019, na.rm = TRUE)  # valor máximo de x2019 (pode ser da base completa)

#######################
## CONTINUAR DAQUI!!
#######################

first_y <- frontier$y2019[1]                   # y do primeiro ponto eficiente
last_y <- frontier$y2019[nrow(frontier)]       # y do último ponto eficiente

# Cria um novo dataframe com os pontos adicionais
frontier2 <- bind_rows(
  tibble(x2019 = min_x, y2019 = 0),    # ponto que liga ao eixo x (mínimo)
  frontier,                          # pontos eficientes
  tibble(x2019 = max_x_total, y2019 = last_y)  # extensão horizontal até o x máximo
)


ggplot(dados_full, aes(x = desp_2019, y = ideb_2019)) +
  geom_point(aes(colour = regiao), size = 1.5) +
  geom_line(data = frontier, aes(x = desp_2019, y = ideb_2019),
            color = "black", size = 1) +
  labs(
    x = "Despesa média por aluno (R$)",
    y = "IDEB",
    title = "DEA 2019"
  ) +
  theme_classic()

dados_full %>%
  ggplot(aes(x = desp_2019, y = ideb_2019)) +
  geom_point(aes(colour = regiao), size = 1.5) +
  geom_path(data = frontier, aes(x = desp_2019, y = ideb_2019), 
            color = "black", size = 1) +
  labs(
    x = "Despesa média por aluno (R$)",
    y = "IDEB",
    title = "DEA 2019") +
  theme_classic()


g2019 <- dados_full %>%
  ggplot() +
  geom_point(mapping = aes(x = desp_2019, y = ideb_2019,colour = regiao), size = 1.5) +
  labs(
    x = "Despesa média por aluno (R$)",
    y = "IDEB",
    title = "DEA 2019") +
  theme_classic()

g2019
